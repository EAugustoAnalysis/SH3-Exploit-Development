/* 
Low_Null_Shellcode_.cpp
Elias Augusto 3/26/2019
A simple SH3 shellcode tester created for the HP Jornada 680/690 running Windows CE 2.11
Part of an ongoing series on exploit development, find out more on my Medium:
https://medium.com/@eaugusto/windows-ce-superh3-exploit-development-part-4-risc-shellcoding-philosophy-and-examples-ce00f0f48ce7
This is the version with a low number of null bytes, still working to reduce it to zero
Progress: Assigning registers 0 has been changed to xoring registers, nop and the bra have both been changed to "mov r1,r1"
Functionality:
Spawns a message box with the title "W" and the caption "W".
Compiler notes:
This program must be compiled with Embedded Visual C++ from Embedded Visual Tools 3.0
Stdafx.h is the standard library for CE, and as such it comes with the tool suite
*/
#include "stdafx.h"

//The actual shellcode
unsigned char mainsc[]="\x04\xC7\x01\x1F\x04\xD0\x7A\x27\xF1\x55"
			"\xF1\x56\x4A\x24\x2B\x40\x13\x61\x13\x61"
			"\x57\x00\x00\x00\xD8\x87\xFB\x01";
//Currently unused nops						
unsigned char scptone[]="\x13\x61";
								
unsigned char scpttwo[]="\x13\x61";

unsigned char scptthree[]="\x13\x61";
						
int sconheap(){
	//Puts currently unused sections of shellcode onto the heap in three chunks
	//I left this here because I needed to ensure that coredll.dll was loaded
	unsigned char *scone = (unsigned char *) malloc((sizeof(scptone)/sizeof(scptone[0])));
	unsigned char *sctwo = (unsigned char *) malloc((sizeof(scpttwo)/sizeof(scpttwo[0])));
	unsigned char *scthree = (unsigned char *) malloc((sizeof(scptthree)/sizeof(scptthree[0])));
	memcpy(scone, scptone, (sizeof(scptone)/sizeof(scptone[0])));
	memcpy(sctwo, scpttwo, (sizeof(scpttwo)/sizeof(scpttwo[0])));
	memcpy(scthree, scptthree, (sizeof(scptthree)/sizeof(scptthree[0])));
	return (0);
}

int WINAPI WinMain(	HINSTANCE hInstance,
					HINSTANCE hPrevInstance,
					LPTSTR    lpCmdLine,
					int       nCmdShow)
{
	int tester = sconheap();
	int (*func)() = (int(*)())&mainsc;
	func();
	free(scone);
	free(sctwo);
	free(scthree);
	return 0;
}
