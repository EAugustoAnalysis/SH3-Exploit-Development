/* 
SCT.cpp
Elias Augusto 3/26/2019
A simple SH3 shellcode tester created for the HP Jornada 680/690 running Windows CE 2.11

Part of an ongoing series on exploit development, find out more on my Medium:
https://medium.com/@eaugusto/windows-ce-superh3-exploit-development-part-4-buffer-overflows-take-two-heap-spritzing-and-674298766a3b

Functionality:
Currently all it does is execute the nop sled and exit with an illegal operation error
It puts a few nop sleds on the heap, but they're nonfunctional as of now
Eventually will test a custom made omlette egghunter

In the meantime, feel free to use this if you're interested

Compiler notes:
This program must be compiled with Embedded Visual C++ from Embedded Visual Tools 3.0
Stdafx.h is the standard library for CE, and as such it comes with the tool suite
*/

#include "stdafx.h"

//Functional stack based shellcode
unsigned char mainsc[]="\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61";

//Shellcode loaded onto the heap for egghunter
unsigned char scptone[]="\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61";
								
unsigned char scpttwo[]="\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
						"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61";

unsigned char scptthree[]="\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
					"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
					"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
					"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
					"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
					"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
					"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
					"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
					"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61"
					"\x13\x61\x13\x61\x13\x61\x13\x61\x13\x61";
						
int sconheap(){
    //Puts shellcode onto the heap in three chunks
    unsigned char *scone = (unsigned char *) malloc((sizeof(scptone)/sizeof(scptone[0])));
    unsigned char *sctwo = (unsigned char *) malloc((sizeof(scpttwo)/sizeof(scpttwo[0])));
    unsigned char *scthree = (unsigned char *) malloc((sizeof(scptthree)/sizeof(scptthree[0])));
    memcpy(scone, scptone, (sizeof(scptthree)/sizeof(scptthree[0])));
    memcpy(sctwo, scpttwo, (sizeof(scptthree)/sizeof(scptthree[0])));
    memcpy(scthree, scptthree, (sizeof(scptthree)/sizeof(scptthree[0])));
    return (0);
}

int WINAPI WinMain(	HINSTANCE hInstance,
					HINSTANCE hPrevInstance,
					LPTSTR    lpCmdLine,
					int       nCmdShow)
{
	int tester = sconheap();
	int (*func)() = (int(*)())&mainsc;
	func(); //execute functional nop sled
	return 0;
}
